@using System;
@using System.Collections.Generic;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@attribute [StyleSheet]

@namespace Home

<root>
    <panel class="bottom-line" />
    <div class="avatar-container">
        <AvatarHud @ref="AvatarHud" />
    </div>
    <panel class="canvas">
        <label class="money" text=@GetMoney() />
        <label class="location" text=@GetLocation() />
        <panel @ref=MoneyChangesPanel class="money-changes">

        </panel>
    </panel>

    <image class="roof" src="ui/ui_roof.png" />

</root>

@code
{
    public static HomeGUI Current;
    public AvatarHud AvatarHud {get; set;}
    public Panel MoneyChangesPanel { get; set; }

    public HomeGUI()
    {
        Current = this;
        BindClass("inmainmenu", () => Game.IsMainMenuVisible);
    }

    protected override void OnAfterTreeRender( bool firstTime )
	{
		base.OnAfterTreeRender( firstTime );

		Current = this;
	}
		
    string GetMoney()
    {
        if (Game.LocalPawn is HomePlayer player)
        {
            return $"${(player?.Data?.Money ?? 0):n0}";
        }
        return "$0";
    }

    string GetLocation()
    {
        if (Game.LocalPawn is HomePlayer player)
        {
            return player.Location;
        }
        return "Main Plaza";
    }

    [GameEvent.Client.BuildInput]
    public void OnBuildInput()
    {
        if(Input.Pressed("menu"))
        {
            AddClass("hide");
        }
        else if(Input.Released("menu"))
        {
            RemoveClass("hide");
        }
    }

    public override void OnButtonTyped(ButtonEvent e)
    {
        base.OnButtonTyped(e);
        Log.Info(e.Button);
        if(e.Button == "escape")
        {
            Log.Info("TRFIASNFSDINFMF");
        }
    }

    public static void UpdateAvatar(string str = "")
    {
        if(Current == null) return;
        if(Game.LocalPawn is not HomePlayer player) return;
        Current.AvatarHud.Update(str == "" ? player.ClothingString : str);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(GetMoney(), GetLocation());
    }
}