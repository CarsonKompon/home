@using System;
@using Sandbox;
@using Sandbox.UI;

@namespace Home

<root class="@GetStyle()" onmouseover=@OnMouseOver onmouseout=@OnMouseOut onclick=@OnClick >
    <div class="background" @ref="ImagePanel" />
</root>

@code
{
    public HomePet Pet { get; set; }

    Panel ImagePanel { get; set; }
    bool MouseOver = false;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if(Pet == null || ImagePanel == null) return;

        SetThumbnail();
    }

    async void SetThumbnail()
    {
        if(MouseOver) ImagePanel.Style.SetBackgroundImage(await Pet.GetVideoThumbnail());
        else ImagePanel.Style.BackgroundImage = await Pet.GetThumbnail();
    }

    string GetStyle()
    {
        if(Pet == null) return "";
        if(Game.LocalPawn is not HomePlayer player) return "";
        if(player.Data == null) return "";
        return (player.Data.CurrentPet == Pet.ResourceId) ? "selected" : "";
    }

    void OnClick()
    {
        if(Pet == null) return;
        if(Game.LocalPawn is not HomePlayer player) return;
        HomePlayer.SetPet(player.NetworkIdent, (GetStyle() == "") ? Pet.ResourceId : 0);
    }

    void OnMouseOver()
    {
        MouseOver = true;
    }

    void OnMouseOut()
    {
        MouseOver = false;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(MouseOver, Pet, GetStyle());
    }
}