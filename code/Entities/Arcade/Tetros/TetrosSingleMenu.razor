@using System;
@using System.Collections.Generic;
@using System.Linq;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@using Home;

@inherits TetrosMenu
@namespace Tetros

<root>

</root>

@code
{
    public ArcadeMachineTetros Machine {get; set;}
    private long PreviousUser {get; set;}

    public TetrosSingleMenu()
    {
        DefaultUrl = "/";

        AddDestination("/", typeof(AttractMenuPage));
        AddDestination("/game", typeof(TetrosGamePage));

        StartGame += () => {
            if(Machine == null || Machine.CurrentUser == null) return;
            PreviousUser = Machine.CurrentUser.Client.SteamId;
        };

        ServerUpdateBoard += (board) => {
            ArcadeMachineTetros.RequestUpdateBoard(Machine.NetworkIdent, board);
        };

        ServerUpdatePlayer += (blockType, x, y, rotation) => {
            ArcadeMachineTetros.RequestUpdatePlayer(Machine.NetworkIdent, (int)blockType, x, y, rotation);
        };

        ServerRequestHeldPiece += (blockType) => {
            ArcadeMachineTetros.RequestHeldPiece(Machine.NetworkIdent, (int)blockType);
        };

        ServerRequestNextPieces += (blocks) => {
            ArcadeMachineTetros.RequestNextPieces(Machine.NetworkIdent, blocks);
        };

        OnExit += (score) => {
            ArcadeMachineTetros.Payout(Machine.PreviousUserSteamId, score);
            ArcadeMachineTetros.RequestRemoveUser(Machine.NetworkIdent);
        };
    }

    public override bool WantsMouseInput()
    {
        return Machine?.CurrentUser == Game.LocalPawn; 
    }
}